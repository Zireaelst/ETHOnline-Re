import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Web3Provider from "@/providers/Web3Provider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Nexus Next Template",
  description: "Generated by Avail team",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        <script
          dangerouslySetInnerHTML={{
            __html: `
              // Filter out known wallet provider conflicts in development
              if (typeof window !== 'undefined') {
                const originalError = console.error;
                console.error = function(...args) {
                  const message = args.join(' ');
                  
                  // Skip these specific error messages
                  if (message.includes('Cannot set property ethereum') ||
                      message.includes('MetaMask encountered an error setting the global Ethereum provider') ||
                      message.includes('another Ethereum wallet extension') ||
                      message.includes('dispatchMessage PetraApiResponse') ||
                      message.includes('net::ERR_CERT_AUTHORITY_INVALID')) {
                    return; // Skip logging these errors
                  }
                  
                  originalError.apply(console, args);
                };
              }
            `,
          }}
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Web3Provider>{children}</Web3Provider>
      </body>
    </html>
  );
}
